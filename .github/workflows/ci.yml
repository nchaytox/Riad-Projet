name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  php-tests-and-quality:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: root
        ports: ["3306:3306"]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s --health-timeout=5s --health-retries=10

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, pdo_mysql, bcmath
          coverage: none
          tools: composer:v2

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('**/composer.lock') }}

      - name: Install PHP deps
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Copy .env.testing
        run: |
          cp .env.testing .env
          php artisan key:generate
          php artisan migrate --force

      - name: Static analysis (PHPStan)
        run: vendor/bin/phpstan analyse --no-progress

      - name: Laravel Pint (code style) - check only
        run: vendor/bin/pint --test

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testdox

      # Front-end
      - name: Use Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install JS deps
        run: npm ci

      - name: ESLint
        run: npx eslint .

      - name: Build assets
        run: npm run build

      # Conserve le build front comme artefact
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: public/build
