version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    image: riad-projet/app:dev
    env_file:
      - .env
    volumes:
      - .:/var/www/html:cached
      - app-storage:/var/www/html/storage
    depends_on:
      - redis
      - mysql
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "php artisan health:check --no-ansi --fail-on-result degraded --fail-on-result unhealthy"]
      interval: 30s
      timeout: 5s
      retries: 3

  web:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    image: riad-projet/web:dev
    ports:
      - "8080:80"
    depends_on:
      app:
        condition: service_started
    volumes:
      - .:/var/www/html:cached
      - app-storage:/var/www/html/storage
    networks:
      - public
      - internal

  queue:
    image: riad-projet/app:dev
    command: ["php", "artisan", "queue:work", "redis", "--sleep=3", "--tries=3", "--max-time=3600"]
    env_file:
      - .env
    volumes:
      - .:/var/www/html:cached
      - app-storage:/var/www/html/storage
    depends_on:
      - redis
      - mysql
    networks:
      - internal
    restart: unless-stopped

  scheduler:
    image: riad-projet/app:dev
    command: ["php", "artisan", "schedule:work"]
    env_file:
      - .env
    volumes:
      - .:/var/www/html:cached
      - app-storage:/var/www/html/storage
    depends_on:
      - redis
      - mysql
    networks:
      - internal
    restart: unless-stopped

  reverb:
    image: riad-projet/app:dev
    command: ["php", "artisan", "reverb:start"]
    env_file:
      - .env
    volumes:
      - .:/var/www/html:cached
      - app-storage:/var/www/html/storage
    depends_on:
      - redis
    networks:
      - internal
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    command: ["redis-server", "--appendonly", "no"]
    ports:
      - "6379:6379"
    networks:
      - internal
    volumes:
      - redis-data:/data

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "8025:8025"
    networks:
      - internal

networks:
  public:
    driver: bridge
  internal:
    driver: bridge

volumes:
  app-storage:
  redis-data:
  mysql-data:
