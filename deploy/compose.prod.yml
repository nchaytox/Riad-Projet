version: "3.9"

services:
  app:
    image: ghcr.io/your-org/riad-projet-app:${IMAGE_TAG:-latest}
    env_file:
      - prod.env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - private
    healthcheck:
      test: ["CMD-SHELL", "php artisan health:check --no-ansi --fail-on-result degraded --fail-on-result unhealthy"]
      interval: 20s
      timeout: 5s
      retries: 6
    read_only: true
    tmpfs:
      - /tmp
    volumes:
      - app-cache:/var/www/html/bootstrap/cache
      - app-storage:/var/www/html/storage

  web:
    image: ghcr.io/your-org/riad-projet-web:${IMAGE_TAG:-latest}
    ports:
      - "443:443"
    depends_on:
      app:
        condition: service_healthy
    volumes:
      - app-storage:/var/www/html/storage:ro
      - /etc/letsencrypt:/etc/nginx/certs:ro
    networks:
      - public
      - private
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost/readyz"]
      interval: 30s
      timeout: 5s
      retries: 5

  queue:
    image: ghcr.io/your-org/riad-projet-app:${IMAGE_TAG:-latest}
    command: ["php", "artisan", "queue:work", "redis", "--sleep=3", "--tries=3", "--max-time=3600"]
    env_file:
      - prod.env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - private
    restart: unless-stopped
    read_only: true
    volumes:
      - app-cache:/var/www/html/bootstrap/cache
      - app-storage:/var/www/html/storage

  scheduler:
    image: ghcr.io/your-org/riad-projet-app:${IMAGE_TAG:-latest}
    command: ["php", "artisan", "schedule:work"]
    env_file:
      - prod.env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - private
    restart: unless-stopped
    read_only: true
    volumes:
      - app-cache:/var/www/html/bootstrap/cache
      - app-storage:/var/www/html/storage

  reverb:
    image: ghcr.io/your-org/riad-projet-app:${IMAGE_TAG:-latest}
    command: ["php", "artisan", "reverb:start", "--host=0.0.0.0"]
    env_file:
      - prod.env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - private
    restart: unless-stopped
    read_only: true
    volumes:
      - app-cache:/var/www/html/bootstrap/cache
      - app-storage:/var/www/html/storage

  redis:
    image: redis:7.2-alpine
    command: ["redis-server", "--appendonly", "no"]
    networks:
      - private
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data

networks:
  public:
    driver: bridge
  private:
    driver: bridge

volumes:
  app-cache:
  app-storage:
  redis-data:
